package com.balugaq.rsceditor.utils;

import com.balugaq.rsceditor.api.objects.types.ItemFlowType;
import com.balugaq.rsceditor.api.objects.types.RainbowType;
import com.balugaq.rsceditor.api.objects.types.SimpleMachineType;
import io.github.thebusybiscuit.slimefun4.core.networks.energy.EnergyNetComponentType;
import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
import lombok.experimental.UtilityClass;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.block.Biome;
import org.jetbrains.annotations.NotNull;

@UtilityClass
public class MaterialUtil {
    public static @NotNull Material getMaterial(@NotNull SimpleMachineType type) {
        return switch (type) {
            case ELECTRIC_CRUCIBLE, ELECTRIC_INGOT_FACTORY -> Material.RED_TERRACOTTA;
            case ELECTRIC_FURNACE, ELECTRIC_ORE_GRINDER, ELECTRIC_INGOT_PULVERIZER, ELECTRIC_SMELTERY ->
                    Material.FURNACE;
            case ELECTRIC_GOLD_PAN, TREE_GROWTH_ACCELERATOR -> Material.BROWN_TERRACOTTA;
            case ELECTRIC_DUST_WASHER -> Material.BLUE_STAINED_GLASS;
            case CHARGING_BENCH -> Material.CRAFTING_TABLE;
            case ANIMAL_GROWTH_ACCELERATOR, PRODUCE_COLLECTOR -> Material.HAY_BLOCK;
            case CROP_GROWTH_ACCELERATOR -> Material.GREEN_TERRACOTTA;
            case FREEZER -> Material.LIGHT_BLUE_STAINED_GLASS;
            case CARBON_PRESS -> Material.BLACK_STAINED_GLASS;
            case ELECTRIC_PRESS -> SlimefunItems.ELECTRIC_PRESS.getType();
            case FOOD_FABRICATOR -> Material.GREEN_STAINED_GLASS;
            case HEATED_PRESSURE_CHAMBER -> Material.LIGHT_GRAY_STAINED_GLASS;
            case AUTO_ENCHANTER, AUTO_DISENCHANTER -> Material.ENCHANTING_TABLE;
            case BOOK_BINDER -> Material.BOOKSHELF;
            case AUTO_ANVIL -> Material.IRON_BLOCK;
            case AUTO_DRIER, AUTO_BREWER -> Material.SMOKER;
            case REFINERY -> Material.PISTON;
            default -> Material.BARRIER;
        };
    }

    public static @NotNull Material getMaterial(@NotNull Biome biome) {
        return switch (biome) {
            case OCEAN, RIVER, DEEP_LUKEWARM_OCEAN, DEEP_COLD_OCEAN, COLD_OCEAN, LUKEWARM_OCEAN, DEEP_OCEAN, WARM_OCEAN ->
                    Material.WATER_BUCKET;
            case PLAINS, MEADOW -> Material.GRASS_BLOCK;
            case DESERT, SNOWY_BEACH, BEACH -> Material.SAND;
            case WINDSWEPT_HILLS, JAGGED_PEAKS -> Material.STONE;
            case FOREST, WINDSWEPT_FOREST -> Material.OAK_LOG;
            case TAIGA, GROVE, OLD_GROWTH_SPRUCE_TAIGA, SNOWY_TAIGA, OLD_GROWTH_PINE_TAIGA -> Material.SPRUCE_LOG;
            case SWAMP -> Material.LILY_PAD;
            case MANGROVE_SWAMP -> Material.MANGROVE_ROOTS;
            case NETHER_WASTES -> Material.NETHERRACK;
            case THE_END, END_HIGHLANDS, END_MIDLANDS, END_BARRENS, SMALL_END_ISLANDS -> Material.END_STONE;
            case FROZEN_OCEAN, FROZEN_PEAKS, ICE_SPIKES, DEEP_FROZEN_OCEAN, FROZEN_RIVER -> Material.ICE;
            case SNOWY_PLAINS, SNOWY_SLOPES -> Material.SNOW_BLOCK;
            case MUSHROOM_FIELDS -> Material.RED_MUSHROOM_BLOCK;
            case JUNGLE, SPARSE_JUNGLE -> Material.JUNGLE_LOG;
            case STONY_SHORE, STONY_PEAKS -> Material.COBBLESTONE;
            case BIRCH_FOREST, OLD_GROWTH_BIRCH_FOREST -> Material.BIRCH_LOG;
            case DARK_FOREST -> Material.DARK_OAK_LOG;
            case SAVANNA, WINDSWEPT_SAVANNA, SAVANNA_PLATEAU, WOODED_BADLANDS -> Material.ACACIA_LOG;
            case BADLANDS, ERODED_BADLANDS -> Material.TERRACOTTA;
            case SUNFLOWER_PLAINS -> Material.SUNFLOWER;
            case WINDSWEPT_GRAVELLY_HILLS -> Material.GRAVEL;
            case FLOWER_FOREST -> Material.DANDELION;
            case BAMBOO_JUNGLE -> Material.BAMBOO;
            case SOUL_SAND_VALLEY -> Material.SOUL_SAND;
            case CRIMSON_FOREST -> Material.CRIMSON_STEM;
            case WARPED_FOREST -> Material.WARPED_STEM;
            case BASALT_DELTAS -> Material.BASALT;
            case DRIPSTONE_CAVES -> Material.POINTED_DRIPSTONE;
            case LUSH_CAVES -> Material.MOSS_BLOCK;
            case DEEP_DARK -> Material.CALCITE;
            case CHERRY_GROVE -> Material.CHERRY_LOG;
            default -> Material.BARRIER;
        };
    }

    public static @NotNull Material getMaterial(@NotNull RainbowType type) {
        return switch (type) {
            case WOOL -> Material.WHITE_WOOL;
            case CARPET -> Material.WHITE_CARPET;
            case STAINED_GLASS -> Material.WHITE_STAINED_GLASS;
            case STAINED_GLASS_PANE -> Material.WHITE_STAINED_GLASS_PANE;
            case CONCRETE -> Material.WHITE_CONCRETE;
            case TERRACOTTA -> Material.WHITE_TERRACOTTA;
            case GLAZED_TERRACOTTA -> Material.WHITE_GLAZED_TERRACOTTA;
            case SHULKER_BOX -> Material.WHITE_SHULKER_BOX;
            default -> Material.BARRIER;
        };
    }

    public static @NotNull Material getMaterial(@NotNull EnergyNetComponentType type) {
        return switch (type) {
            case GENERATOR -> Material.GLOWSTONE;
            case CAPACITOR -> Material.IRON_BLOCK;
            case CONSUMER -> Material.GOLD_BLOCK;
            case CONNECTOR -> Material.REDSTONE_BLOCK;
            default -> Material.BARRIER;
        };
    }

    public static @NotNull Material getMaterial(@NotNull ItemFlowType type) {
        return switch (type) {
            case NONE -> Material.GRAY_STAINED_GLASS_PANE;
            case INSERT -> Material.BLUE_STAINED_GLASS_PANE;
            case WITHDRAW -> Material.ORANGE_STAINED_GLASS_PANE;
            case INSERT_AND_WITHDRAW -> Material.PURPLE_STAINED_GLASS_PANE;
            case FREE_OUTPUT -> Material.GREEN_STAINED_GLASS_PANE;
            default -> Material.BARRIER;
        };
    }

    public static Material getMaterial(@NotNull Sound sound) {
        return switch (sound) {
            case AMBIENT_BASALT_DELTAS_ADDITIONS, AMBIENT_BASALT_DELTAS_LOOP, AMBIENT_BASALT_DELTAS_MOOD, BLOCK_BASALT_BREAK, BLOCK_BASALT_FALL, BLOCK_BASALT_HIT, BLOCK_BASALT_PLACE, BLOCK_BASALT_STEP ->
                    Material.BASALT;
            case AMBIENT_CAVE, BLOCK_STONE_STEP, BLOCK_STONE_BREAK, BLOCK_STONE_FALL, BLOCK_STONE_HIT, BLOCK_STONE_PLACE ->
                    Material.STONE;
            case AMBIENT_CRIMSON_FOREST_ADDITIONS, AMBIENT_CRIMSON_FOREST_LOOP, AMBIENT_CRIMSON_FOREST_MOOD ->
                    Material.CRIMSON_STEM;
            case AMBIENT_NETHER_WASTES_ADDITIONS, AMBIENT_NETHER_WASTES_LOOP, AMBIENT_NETHER_WASTES_MOOD, BLOCK_NETHERRACK_BREAK, BLOCK_NETHERRACK_FALL, BLOCK_NETHERRACK_HIT, BLOCK_NETHERRACK_PLACE, BLOCK_NETHERRACK_STEP, BLOCK_PORTAL_TRIGGER, BLOCK_PORTAL_AMBIENT, BLOCK_PORTAL_TRAVEL ->
                    Material.NETHERRACK;
            case AMBIENT_SOUL_SAND_VALLEY_ADDITIONS, AMBIENT_SOUL_SAND_VALLEY_LOOP, AMBIENT_SOUL_SAND_VALLEY_MOOD, PARTICLE_SOUL_ESCAPE, BLOCK_SOUL_SAND_BREAK, BLOCK_SOUL_SAND_FALL, BLOCK_SOUL_SAND_HIT, BLOCK_SOUL_SAND_PLACE, BLOCK_SOUL_SAND_STEP ->
                    Material.SOUL_SAND;
            case AMBIENT_UNDERWATER_ENTER, AMBIENT_UNDERWATER_EXIT, AMBIENT_UNDERWATER_LOOP, AMBIENT_UNDERWATER_LOOP_ADDITIONS, AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE, AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE, BLOCK_WATER_AMBIENT, WEATHER_RAIN, WEATHER_RAIN_ABOVE, BLOCK_BUBBLE_COLUMN_BUBBLE_POP, BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT, BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE, BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT, BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE ->
                    Material.WATER_BUCKET;
            case AMBIENT_WARPED_FOREST_ADDITIONS, AMBIENT_WARPED_FOREST_LOOP, AMBIENT_WARPED_FOREST_MOOD ->
                    Material.WARPED_STEM;
            case BLOCK_AMETHYST_BLOCK_BREAK, BLOCK_AMETHYST_BLOCK_CHIME, BLOCK_AMETHYST_BLOCK_FALL, BLOCK_AMETHYST_BLOCK_HIT, BLOCK_AMETHYST_BLOCK_PLACE, BLOCK_AMETHYST_BLOCK_RESONATE, BLOCK_AMETHYST_BLOCK_STEP ->
                    Material.AMETHYST_BLOCK;
            case BLOCK_AMETHYST_CLUSTER_BREAK, BLOCK_AMETHYST_CLUSTER_FALL, BLOCK_AMETHYST_CLUSTER_HIT, BLOCK_AMETHYST_CLUSTER_PLACE, BLOCK_AMETHYST_CLUSTER_STEP ->
                    Material.AMETHYST_CLUSTER;
            case BLOCK_ANCIENT_DEBRIS_BREAK, BLOCK_ANCIENT_DEBRIS_FALL, BLOCK_ANCIENT_DEBRIS_HIT, BLOCK_ANCIENT_DEBRIS_PLACE, BLOCK_ANCIENT_DEBRIS_STEP ->
                    Material.ANCIENT_DEBRIS;
            case BLOCK_ANVIL_BREAK, BLOCK_ANVIL_DESTROY, BLOCK_ANVIL_FALL, BLOCK_ANVIL_HIT, BLOCK_ANVIL_LAND, BLOCK_ANVIL_PLACE, BLOCK_ANVIL_STEP, BLOCK_ANVIL_USE ->
                    Material.ANVIL;
            case BLOCK_AZALEA_BREAK, BLOCK_AZALEA_FALL, BLOCK_AZALEA_HIT, BLOCK_AZALEA_LEAVES_BREAK, BLOCK_AZALEA_LEAVES_FALL, BLOCK_AZALEA_LEAVES_HIT, BLOCK_AZALEA_LEAVES_PLACE, BLOCK_AZALEA_LEAVES_STEP, BLOCK_AZALEA_PLACE, BLOCK_AZALEA_STEP ->
                    Material.AZALEA;
            case BLOCK_BAMBOO_WOOD_BREAK, BLOCK_BAMBOO_BREAK, BLOCK_BAMBOO_FALL, BLOCK_BAMBOO_HIT, BLOCK_BAMBOO_PLACE, BLOCK_BAMBOO_SAPLING_BREAK, BLOCK_BAMBOO_SAPLING_HIT, BLOCK_BAMBOO_SAPLING_PLACE, BLOCK_BAMBOO_STEP, BLOCK_BAMBOO_WOOD_BUTTON_CLICK_OFF, BLOCK_BAMBOO_WOOD_BUTTON_CLICK_ON, BLOCK_BAMBOO_WOOD_DOOR_CLOSE, BLOCK_BAMBOO_WOOD_DOOR_OPEN, BLOCK_BAMBOO_WOOD_FALL, BLOCK_BAMBOO_WOOD_FENCE_GATE_CLOSE, BLOCK_BAMBOO_WOOD_FENCE_GATE_OPEN, BLOCK_BAMBOO_WOOD_HANGING_SIGN_BREAK, BLOCK_BAMBOO_WOOD_HANGING_SIGN_FALL, BLOCK_BAMBOO_WOOD_HANGING_SIGN_HIT, BLOCK_BAMBOO_WOOD_HANGING_SIGN_PLACE, BLOCK_BAMBOO_WOOD_HANGING_SIGN_STEP, BLOCK_BAMBOO_WOOD_HIT, BLOCK_BAMBOO_WOOD_PLACE, BLOCK_BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF, BLOCK_BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON, BLOCK_BAMBOO_WOOD_STEP, BLOCK_BAMBOO_WOOD_TRAPDOOR_CLOSE, BLOCK_BAMBOO_WOOD_TRAPDOOR_OPEN ->
                    Material.BAMBOO;
            case BLOCK_BARREL_CLOSE, BLOCK_BARREL_OPEN -> Material.BARREL;
            case BLOCK_BEACON_ACTIVATE, BLOCK_BEACON_AMBIENT, BLOCK_BEACON_DEACTIVATE, BLOCK_BEACON_POWER_SELECT ->
                    Material.BEACON;
            case BLOCK_BEEHIVE_DRIP, BLOCK_BEEHIVE_ENTER, BLOCK_BEEHIVE_EXIT, BLOCK_BEEHIVE_SHEAR, BLOCK_BEEHIVE_WORK ->
                    Material.BEEHIVE;
            case BLOCK_BELL_RESONATE, BLOCK_BELL_USE -> Material.BELL;
            case BLOCK_BIG_DRIPLEAF_BREAK, BLOCK_BIG_DRIPLEAF_FALL, BLOCK_BIG_DRIPLEAF_HIT, BLOCK_BIG_DRIPLEAF_PLACE, BLOCK_BIG_DRIPLEAF_STEP, BLOCK_BIG_DRIPLEAF_TILT_DOWN, BLOCK_BIG_DRIPLEAF_TILT_UP ->
                    Material.BIG_DRIPLEAF;
            case BLOCK_BLASTFURNACE_FIRE_CRACKLE -> Material.BLAST_FURNACE;
            case BLOCK_BONE_BLOCK_BREAK, BLOCK_BONE_BLOCK_FALL, BLOCK_BONE_BLOCK_HIT, BLOCK_BONE_BLOCK_PLACE, BLOCK_BONE_BLOCK_STEP ->
                    Material.BONE_BLOCK;
            case BLOCK_BREWING_STAND_BREW -> Material.BREWING_STAND;
            case BLOCK_CAKE_ADD_CANDLE -> Material.CAKE;
            case BLOCK_CALCITE_BREAK, BLOCK_CALCITE_FALL, BLOCK_CALCITE_HIT, BLOCK_CALCITE_PLACE, BLOCK_CALCITE_STEP ->
                    Material.CALCITE;
            case BLOCK_CAMPFIRE_CRACKLE -> Material.CAMPFIRE;
            case BLOCK_CANDLE_AMBIENT, BLOCK_CANDLE_BREAK, BLOCK_CANDLE_EXTINGUISH, BLOCK_CANDLE_FALL, BLOCK_CANDLE_HIT, BLOCK_CANDLE_PLACE, BLOCK_CANDLE_STEP ->
                    Material.CANDLE;
            case BLOCK_CAVE_VINES_BREAK, BLOCK_CAVE_VINES_FALL, BLOCK_CAVE_VINES_HIT, BLOCK_CAVE_VINES_PICK_BERRIES, BLOCK_CAVE_VINES_PLACE, BLOCK_CAVE_VINES_STEP, BLOCK_VINE_FALL, BLOCK_VINE_HIT, BLOCK_VINE_STEP, BLOCK_VINE_PLACE, BLOCK_VINE_BREAK ->
                    Material.VINE;
            case BLOCK_CHAIN_BREAK, BLOCK_CHAIN_FALL, BLOCK_CHAIN_HIT, BLOCK_CHAIN_PLACE, BLOCK_CHAIN_STEP ->
                    Material.CHAIN;
            case BLOCK_CHERRY_LEAVES_BREAK, BLOCK_CHERRY_LEAVES_FALL, BLOCK_CHERRY_LEAVES_HIT, BLOCK_CHERRY_LEAVES_PLACE, BLOCK_CHERRY_LEAVES_STEP ->
                    Material.CHERRY_LEAVES;
            case BLOCK_CHERRY_SAPLING_BREAK, BLOCK_CHERRY_SAPLING_FALL, BLOCK_CHERRY_SAPLING_HIT, BLOCK_CHERRY_SAPLING_PLACE, BLOCK_CHERRY_SAPLING_STEP ->
                    Material.CHERRY_SAPLING;
            case BLOCK_CHERRY_WOOD_BREAK, BLOCK_CHERRY_WOOD_BUTTON_CLICK_OFF, BLOCK_CHERRY_WOOD_BUTTON_CLICK_ON, BLOCK_CHERRY_WOOD_DOOR_CLOSE, BLOCK_CHERRY_WOOD_DOOR_OPEN, BLOCK_CHERRY_WOOD_FALL, BLOCK_CHERRY_WOOD_FENCE_GATE_CLOSE, BLOCK_CHERRY_WOOD_FENCE_GATE_OPEN, BLOCK_CHERRY_WOOD_HANGING_SIGN_BREAK, BLOCK_CHERRY_WOOD_HANGING_SIGN_FALL, BLOCK_CHERRY_WOOD_HANGING_SIGN_HIT, BLOCK_CHERRY_WOOD_HANGING_SIGN_PLACE, BLOCK_CHERRY_WOOD_HANGING_SIGN_STEP, BLOCK_CHERRY_WOOD_HIT, BLOCK_CHERRY_WOOD_PLACE, BLOCK_CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF, BLOCK_CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON, BLOCK_CHERRY_WOOD_STEP, BLOCK_CHERRY_WOOD_TRAPDOOR_CLOSE, BLOCK_CHERRY_WOOD_TRAPDOOR_OPEN ->
                    Material.CHERRY_WOOD;
            case BLOCK_CHEST_CLOSE, BLOCK_CHEST_LOCKED, BLOCK_CHEST_OPEN -> Material.CHEST;
            case BLOCK_CHISELED_BOOKSHELF_BREAK, BLOCK_CHISELED_BOOKSHELF_FALL, BLOCK_CHISELED_BOOKSHELF_HIT, BLOCK_CHISELED_BOOKSHELF_INSERT, BLOCK_CHISELED_BOOKSHELF_INSERT_ENCHANTED, BLOCK_CHISELED_BOOKSHELF_PICKUP, BLOCK_CHISELED_BOOKSHELF_PICKUP_ENCHANTED, BLOCK_CHISELED_BOOKSHELF_PLACE, BLOCK_CHISELED_BOOKSHELF_STEP ->
                    Material.BOOKSHELF;
            case BLOCK_CHORUS_FLOWER_DEATH, BLOCK_CHORUS_FLOWER_GROW -> Material.CHORUS_FLOWER;
            case BLOCK_COMPARATOR_CLICK -> Material.COMPARATOR;
            case BLOCK_COMPOSTER_EMPTY, BLOCK_COMPOSTER_FILL, BLOCK_COMPOSTER_FILL_SUCCESS, BLOCK_COMPOSTER_READY ->
                    Material.COMPOSTER;
            case BLOCK_CONDUIT_ACTIVATE, BLOCK_CONDUIT_AMBIENT, BLOCK_CONDUIT_AMBIENT_SHORT, BLOCK_CONDUIT_ATTACK_TARGET, BLOCK_CONDUIT_DEACTIVATE ->
                    Material.CONDUIT;
            case BLOCK_COPPER_BREAK, BLOCK_COPPER_FALL, BLOCK_COPPER_HIT, BLOCK_COPPER_PLACE, BLOCK_COPPER_STEP ->
                    Material.COPPER_BLOCK;
            case BLOCK_CORAL_BLOCK_BREAK, BLOCK_CORAL_BLOCK_FALL, BLOCK_CORAL_BLOCK_HIT, BLOCK_CORAL_BLOCK_PLACE, BLOCK_CORAL_BLOCK_STEP ->
                    Material.BRAIN_CORAL_BLOCK;
            case BLOCK_CROP_BREAK, ITEM_CROP_PLANT -> Material.WHEAT_SEEDS;
            case BLOCK_DECORATED_POT_BREAK, BLOCK_DECORATED_POT_FALL, BLOCK_DECORATED_POT_HIT, BLOCK_DECORATED_POT_PLACE, BLOCK_DECORATED_POT_SHATTER, BLOCK_DECORATED_POT_STEP ->
                    Material.DECORATED_POT;
            case BLOCK_DEEPSLATE_BREAK, BLOCK_DEEPSLATE_BRICKS_BREAK, BLOCK_DEEPSLATE_BRICKS_FALL, BLOCK_DEEPSLATE_BRICKS_HIT, BLOCK_DEEPSLATE_BRICKS_PLACE, BLOCK_DEEPSLATE_BRICKS_STEP, BLOCK_DEEPSLATE_FALL, BLOCK_DEEPSLATE_HIT, BLOCK_DEEPSLATE_PLACE, BLOCK_DEEPSLATE_STEP, BLOCK_DEEPSLATE_TILES_BREAK, BLOCK_DEEPSLATE_TILES_FALL, BLOCK_DEEPSLATE_TILES_HIT, BLOCK_DEEPSLATE_TILES_PLACE, BLOCK_DEEPSLATE_TILES_STEP, BLOCK_NETHER_ORE_BREAK, BLOCK_NETHER_ORE_FALL, BLOCK_NETHER_ORE_HIT, BLOCK_NETHER_ORE_PLACE, BLOCK_NETHER_ORE_STEP ->
                    Material.DEEPSLATE;
            case BLOCK_DISPENSER_DISPENSE, BLOCK_DISPENSER_FAIL, BLOCK_DISPENSER_LAUNCH -> Material.DISPENSER;
            case BLOCK_DRIPSTONE_BLOCK_BREAK, BLOCK_DRIPSTONE_BLOCK_FALL, BLOCK_DRIPSTONE_BLOCK_HIT, BLOCK_DRIPSTONE_BLOCK_PLACE, BLOCK_DRIPSTONE_BLOCK_STEP ->
                    Material.DRIPSTONE_BLOCK;
            case BLOCK_ENCHANTMENT_TABLE_USE -> Material.ENCHANTING_TABLE;
            case BLOCK_ENDER_CHEST_CLOSE, BLOCK_ENDER_CHEST_OPEN -> Material.ENDER_CHEST;
            case BLOCK_END_GATEWAY_SPAWN, BLOCK_END_PORTAL_FRAME_FILL, BLOCK_END_PORTAL_SPAWN ->
                    Material.END_PORTAL_FRAME;
            case BLOCK_FENCE_GATE_CLOSE, BLOCK_FENCE_GATE_OPEN -> Material.OAK_FENCE_GATE;
            case BLOCK_FIRE_AMBIENT, BLOCK_FIRE_EXTINGUISH, ITEM_FLINTANDSTEEL_USE -> Material.FLINT_AND_STEEL;
            case BLOCK_FLOWERING_AZALEA_BREAK, BLOCK_FLOWERING_AZALEA_FALL, BLOCK_FLOWERING_AZALEA_HIT, BLOCK_FLOWERING_AZALEA_PLACE, BLOCK_FLOWERING_AZALEA_STEP ->
                    Material.FLOWERING_AZALEA;
            case BLOCK_FROGLIGHT_BREAK, BLOCK_FROGLIGHT_FALL, BLOCK_FROGLIGHT_HIT, BLOCK_FROGLIGHT_PLACE, BLOCK_FROGLIGHT_STEP ->
                    Material.OCHRE_FROGLIGHT;
            case BLOCK_FROGSPAWN_BREAK, BLOCK_FROGSPAWN_FALL, BLOCK_FROGSPAWN_HATCH, BLOCK_FROGSPAWN_HIT, BLOCK_FROGSPAWN_PLACE, BLOCK_FROGSPAWN_STEP ->
                    Material.FROGSPAWN;
            case BLOCK_FUNGUS_BREAK, BLOCK_FUNGUS_FALL, BLOCK_FUNGUS_HIT, BLOCK_FUNGUS_PLACE, BLOCK_FUNGUS_STEP ->
                    Material.CRIMSON_FUNGUS;
            case BLOCK_FURNACE_FIRE_CRACKLE -> Material.FURNACE;
            case BLOCK_GILDED_BLACKSTONE_BREAK, BLOCK_GILDED_BLACKSTONE_FALL, BLOCK_GILDED_BLACKSTONE_HIT, BLOCK_GILDED_BLACKSTONE_PLACE, BLOCK_GILDED_BLACKSTONE_STEP ->
                    Material.GILDED_BLACKSTONE;
            case BLOCK_GLASS_BREAK, BLOCK_GLASS_FALL, BLOCK_GLASS_HIT, BLOCK_GLASS_PLACE, BLOCK_GLASS_STEP ->
                    Material.GLASS;
            case BLOCK_GRASS_BREAK, BLOCK_GRASS_FALL, BLOCK_GRASS_HIT, BLOCK_GRASS_PLACE, BLOCK_GRASS_STEP ->
                    Material.GRASS_BLOCK;
            case BLOCK_GRAVEL_BREAK, BLOCK_GRAVEL_FALL, BLOCK_GRAVEL_HIT, BLOCK_GRAVEL_PLACE, BLOCK_GRAVEL_STEP ->
                    Material.GRAVEL;
            case BLOCK_GRINDSTONE_USE -> Material.GRINDSTONE;
            case BLOCK_GROWING_PLANT_CROP -> Material.WHEAT;
            case BLOCK_HANGING_ROOTS_BREAK, BLOCK_HANGING_ROOTS_FALL, BLOCK_HANGING_ROOTS_HIT, BLOCK_HANGING_ROOTS_PLACE, BLOCK_HANGING_ROOTS_STEP ->
                    Material.HANGING_ROOTS;
            case BLOCK_HANGING_SIGN_BREAK, BLOCK_HANGING_SIGN_FALL, BLOCK_HANGING_SIGN_HIT, BLOCK_HANGING_SIGN_PLACE, BLOCK_HANGING_SIGN_STEP ->
                    Material.OAK_HANGING_SIGN;
            case BLOCK_HONEY_BLOCK_BREAK, BLOCK_HONEY_BLOCK_FALL, BLOCK_HONEY_BLOCK_HIT, BLOCK_HONEY_BLOCK_PLACE, BLOCK_HONEY_BLOCK_SLIDE, BLOCK_HONEY_BLOCK_STEP ->
                    Material.HONEY_BLOCK;
            case BLOCK_IRON_DOOR_CLOSE, BLOCK_IRON_DOOR_OPEN, BLOCK_IRON_TRAPDOOR_CLOSE, BLOCK_IRON_TRAPDOOR_OPEN ->
                    Material.IRON_DOOR;
            case BLOCK_LADDER_BREAK, BLOCK_LADDER_FALL, BLOCK_LADDER_HIT, BLOCK_LADDER_PLACE, BLOCK_LADDER_STEP ->
                    Material.LADDER;
            case BLOCK_LANTERN_BREAK, BLOCK_LANTERN_FALL, BLOCK_LANTERN_HIT, BLOCK_LANTERN_PLACE, BLOCK_LANTERN_STEP ->
                    Material.LANTERN;
            case BLOCK_LARGE_AMETHYST_BUD_BREAK, BLOCK_LARGE_AMETHYST_BUD_PLACE -> Material.LARGE_AMETHYST_BUD;
            case BLOCK_LAVA_AMBIENT, BLOCK_LAVA_EXTINGUISH, BLOCK_LAVA_POP -> Material.LAVA_BUCKET;
            case BLOCK_LEVER_CLICK -> Material.LEVER;
            case BLOCK_LILY_PAD_PLACE -> Material.LILY_PAD;
            case BLOCK_LODESTONE_BREAK, BLOCK_LODESTONE_FALL, BLOCK_LODESTONE_HIT, BLOCK_LODESTONE_PLACE, BLOCK_LODESTONE_STEP, ITEM_LODESTONE_COMPASS_LOCK ->
                    Material.LODESTONE;
            case BLOCK_MANGROVE_ROOTS_BREAK, BLOCK_MANGROVE_ROOTS_FALL, BLOCK_MANGROVE_ROOTS_HIT, BLOCK_MANGROVE_ROOTS_PLACE, BLOCK_MANGROVE_ROOTS_STEP ->
                    Material.MANGROVE_ROOTS;
            case BLOCK_MEDIUM_AMETHYST_BUD_BREAK, BLOCK_MEDIUM_AMETHYST_BUD_PLACE -> Material.MEDIUM_AMETHYST_BUD;
            case BLOCK_METAL_BREAK, BLOCK_METAL_FALL, BLOCK_METAL_HIT, BLOCK_METAL_PLACE, BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF, BLOCK_METAL_PRESSURE_PLATE_CLICK_ON, BLOCK_METAL_STEP ->
                    Material.LIGHT_WEIGHTED_PRESSURE_PLATE;
            case BLOCK_MOSS_BREAK, BLOCK_MOSS_CARPET_BREAK, BLOCK_MOSS_CARPET_FALL, BLOCK_MOSS_CARPET_HIT, BLOCK_MOSS_CARPET_PLACE, BLOCK_MOSS_CARPET_STEP, BLOCK_MOSS_FALL, BLOCK_MOSS_HIT, BLOCK_MOSS_PLACE, BLOCK_MOSS_STEP ->
                    Material.MOSS_BLOCK;
            case BLOCK_MUDDY_MANGROVE_ROOTS_BREAK, BLOCK_MUDDY_MANGROVE_ROOTS_FALL, BLOCK_MUDDY_MANGROVE_ROOTS_HIT, BLOCK_MUDDY_MANGROVE_ROOTS_PLACE, BLOCK_MUDDY_MANGROVE_ROOTS_STEP ->
                    Material.MUDDY_MANGROVE_ROOTS;
            case BLOCK_MUD_BREAK, BLOCK_MUD_BRICKS_BREAK, BLOCK_MUD_BRICKS_FALL, BLOCK_MUD_BRICKS_HIT, BLOCK_MUD_BRICKS_PLACE, BLOCK_MUD_BRICKS_STEP, BLOCK_MUD_FALL, BLOCK_MUD_HIT, BLOCK_MUD_PLACE, BLOCK_MUD_STEP ->
                    Material.MUD;
            case BLOCK_NETHERITE_BLOCK_BREAK, BLOCK_NETHERITE_BLOCK_FALL, BLOCK_NETHERITE_BLOCK_HIT, BLOCK_NETHERITE_BLOCK_PLACE, BLOCK_NETHERITE_BLOCK_STEP ->
                    Material.NETHERITE_BLOCK;
            case BLOCK_NETHER_BRICKS_BREAK, BLOCK_NETHER_BRICKS_FALL, BLOCK_NETHER_BRICKS_HIT, BLOCK_NETHER_BRICKS_PLACE, BLOCK_NETHER_BRICKS_STEP ->
                    Material.NETHER_BRICKS;
            case BLOCK_NETHER_GOLD_ORE_BREAK, BLOCK_NETHER_GOLD_ORE_FALL, BLOCK_NETHER_GOLD_ORE_HIT, BLOCK_NETHER_GOLD_ORE_PLACE, BLOCK_NETHER_GOLD_ORE_STEP ->
                    Material.GOLD_ORE;
            case BLOCK_NETHER_SPROUTS_BREAK, BLOCK_NETHER_SPROUTS_FALL, BLOCK_NETHER_SPROUTS_HIT, BLOCK_NETHER_SPROUTS_PLACE, BLOCK_NETHER_SPROUTS_STEP ->
                    Material.NETHER_SPROUTS;
            case BLOCK_NETHER_WART_BREAK, BLOCK_WART_BLOCK_BREAK, BLOCK_WART_BLOCK_FALL, BLOCK_WART_BLOCK_HIT, BLOCK_WART_BLOCK_PLACE, BLOCK_WART_BLOCK_STEP, ITEM_NETHER_WART_PLANT ->
                    Material.NETHER_WART;
            case BLOCK_NETHER_WOOD_BREAK, BLOCK_NETHER_WOOD_BUTTON_CLICK_OFF, BLOCK_NETHER_WOOD_BUTTON_CLICK_ON, BLOCK_NETHER_WOOD_DOOR_CLOSE, BLOCK_NETHER_WOOD_DOOR_OPEN, BLOCK_NETHER_WOOD_FALL, BLOCK_NETHER_WOOD_FENCE_GATE_CLOSE, BLOCK_NETHER_WOOD_FENCE_GATE_OPEN, BLOCK_NETHER_WOOD_HANGING_SIGN_BREAK, BLOCK_NETHER_WOOD_HANGING_SIGN_FALL, BLOCK_NETHER_WOOD_HANGING_SIGN_HIT, BLOCK_NETHER_WOOD_HANGING_SIGN_PLACE, BLOCK_NETHER_WOOD_HANGING_SIGN_STEP, BLOCK_NETHER_WOOD_HIT, BLOCK_NETHER_WOOD_PLACE, BLOCK_NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF, BLOCK_NETHER_WOOD_PRESSURE_PLATE_CLICK_ON, BLOCK_NETHER_WOOD_STEP, BLOCK_NETHER_WOOD_TRAPDOOR_CLOSE, BLOCK_NETHER_WOOD_TRAPDOOR_OPEN ->
                    Material.STRIPPED_OAK_LOG;
            case BLOCK_WEEPING_VINES_BREAK, BLOCK_WEEPING_VINES_FALL, BLOCK_WEEPING_VINES_HIT, BLOCK_WEEPING_VINES_PLACE, BLOCK_WEEPING_VINES_STEP ->
                    Material.WEEPING_VINES;
            case BLOCK_WET_GRASS_BREAK, BLOCK_WET_GRASS_FALL, BLOCK_WET_GRASS_HIT, BLOCK_WET_GRASS_PLACE, BLOCK_WET_GRASS_STEP ->
                    Material.GRASS;
            case BLOCK_WOODEN_BUTTON_CLICK_OFF, BLOCK_WOODEN_BUTTON_CLICK_ON, UI_BUTTON_CLICK -> Material.OAK_BUTTON;
            case BLOCK_WOODEN_DOOR_CLOSE, BLOCK_WOODEN_DOOR_OPEN -> Material.OAK_DOOR;
            case BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF, BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON ->
                    Material.OAK_PRESSURE_PLATE;
            case BLOCK_WOODEN_TRAPDOOR_CLOSE, BLOCK_WOODEN_TRAPDOOR_OPEN -> Material.OAK_TRAPDOOR;
            case BLOCK_WOOD_BREAK, BLOCK_WOOD_FALL, BLOCK_WOOD_HIT, BLOCK_WOOD_PLACE, BLOCK_WOOD_STEP ->
                    Material.OAK_WOOD;
            case BLOCK_WOOL_BREAK, BLOCK_WOOL_FALL, BLOCK_WOOL_HIT, BLOCK_WOOL_PLACE, BLOCK_WOOL_STEP ->
                    Material.WHITE_WOOL;
            case ENCHANT_THORNS_HIT, ITEM_TRIDENT_HIT, ITEM_TRIDENT_HIT_GROUND, ITEM_TRIDENT_RETURN, ITEM_TRIDENT_RIPTIDE_1, ITEM_TRIDENT_RIPTIDE_2, ITEM_TRIDENT_RIPTIDE_3, ITEM_TRIDENT_THROW, ITEM_TRIDENT_THUNDER ->
                    Material.TRIDENT;
            case ENTITY_ALLAY_AMBIENT_WITHOUT_ITEM, ENTITY_ALLAY_AMBIENT_WITH_ITEM, ENTITY_ALLAY_DEATH, ENTITY_ALLAY_HURT, ENTITY_ALLAY_ITEM_GIVEN, ENTITY_ALLAY_ITEM_TAKEN, ENTITY_ALLAY_ITEM_THROWN ->
                    Material.ALLAY_SPAWN_EGG;
            case ENTITY_ARMOR_STAND_BREAK, ENTITY_ARMOR_STAND_FALL, ENTITY_ARMOR_STAND_HIT, ENTITY_ARMOR_STAND_PLACE ->
                    Material.ARMOR_STAND;
            case ENTITY_ARROW_HIT, ENTITY_ARROW_HIT_PLAYER, ENTITY_ARROW_SHOOT -> Material.ARROW;
            case ENTITY_AXOLOTL_ATTACK, ENTITY_AXOLOTL_DEATH, ENTITY_AXOLOTL_HURT, ENTITY_AXOLOTL_IDLE_AIR, ENTITY_AXOLOTL_IDLE_WATER, ENTITY_AXOLOTL_SPLASH, ENTITY_AXOLOTL_SWIM ->
                    Material.AXOLOTL_SPAWN_EGG;
            case ENTITY_BAT_AMBIENT, ENTITY_BAT_DEATH, ENTITY_BAT_HURT, ENTITY_BAT_LOOP, ENTITY_BAT_TAKEOFF ->
                    Material.BAT_SPAWN_EGG;
            case ENTITY_BEE_DEATH, ENTITY_BEE_HURT, ENTITY_BEE_LOOP, ENTITY_BEE_LOOP_AGGRESSIVE, ENTITY_BEE_POLLINATE, ENTITY_BEE_STING ->
                    Material.BEE_SPAWN_EGG;
            case ENTITY_BLAZE_AMBIENT, ENTITY_BLAZE_BURN, ENTITY_BLAZE_DEATH, ENTITY_BLAZE_HURT, ENTITY_BLAZE_SHOOT ->
                    Material.BLAZE_SPAWN_EGG;
            case ENTITY_BOAT_PADDLE_LAND, ENTITY_BOAT_PADDLE_WATER -> Material.OAK_BOAT;
            case ENTITY_CAMEL_AMBIENT, ENTITY_CAMEL_DASH, ENTITY_CAMEL_DASH_READY, ENTITY_CAMEL_DEATH, ENTITY_CAMEL_EAT, ENTITY_CAMEL_HURT, ENTITY_CAMEL_SADDLE, ENTITY_CAMEL_SIT, ENTITY_CAMEL_STAND, ENTITY_CAMEL_STEP, ENTITY_CAMEL_STEP_SAND ->
                    Material.CAMEL_SPAWN_EGG;
            case ENTITY_CAT_AMBIENT, ENTITY_CAT_BEG_FOR_FOOD, ENTITY_CAT_DEATH, ENTITY_CAT_EAT, ENTITY_CAT_HISS, ENTITY_CAT_HURT, ENTITY_CAT_PURR, ENTITY_CAT_PURREOW, ENTITY_CAT_STRAY_AMBIENT ->
                    Material.CAT_SPAWN_EGG;
            case ENTITY_CHICKEN_AMBIENT, ENTITY_CHICKEN_DEATH, ENTITY_CHICKEN_EGG, ENTITY_CHICKEN_HURT, ENTITY_CHICKEN_STEP ->
                    Material.CHICKEN;
            case ENTITY_COD_AMBIENT, ENTITY_COD_DEATH, ENTITY_COD_FLOP, ENTITY_COD_HURT, ENTITY_FISH_SWIM ->
                    Material.COD;
            case ENTITY_COW_AMBIENT, ENTITY_COW_DEATH, ENTITY_COW_HURT, ENTITY_COW_MILK, ENTITY_COW_STEP ->
                    Material.COW_SPAWN_EGG;
            case ENTITY_CREEPER_DEATH, ENTITY_CREEPER_HURT, ENTITY_CREEPER_PRIMED -> Material.CREEPER_SPAWN_EGG;
            case ENTITY_DOLPHIN_AMBIENT, ENTITY_DOLPHIN_AMBIENT_WATER, ENTITY_DOLPHIN_ATTACK, ENTITY_DOLPHIN_DEATH, ENTITY_DOLPHIN_EAT, ENTITY_DOLPHIN_HURT, ENTITY_DOLPHIN_JUMP, ENTITY_DOLPHIN_PLAY, ENTITY_DOLPHIN_SPLASH, ENTITY_DOLPHIN_SWIM ->
                    Material.DOLPHIN_SPAWN_EGG;
            case ENTITY_DONKEY_AMBIENT, ENTITY_DONKEY_ANGRY, ENTITY_DONKEY_CHEST, ENTITY_DONKEY_DEATH, ENTITY_DONKEY_EAT, ENTITY_DONKEY_HURT ->
                    Material.DONKEY_SPAWN_EGG;
            case ENTITY_DRAGON_FIREBALL_EXPLODE -> Material.DRAGON_BREATH;
            case ENTITY_DROWNED_AMBIENT, ENTITY_DROWNED_AMBIENT_WATER, ENTITY_DROWNED_DEATH, ENTITY_DROWNED_DEATH_WATER, ENTITY_DROWNED_HURT, ENTITY_DROWNED_HURT_WATER, ENTITY_DROWNED_SHOOT, ENTITY_DROWNED_STEP, ENTITY_DROWNED_SWIM ->
                    Material.DROWNED_SPAWN_EGG;
            case ENTITY_EGG_THROW -> Material.EGG;
            case ENTITY_ELDER_GUARDIAN_AMBIENT, ENTITY_ELDER_GUARDIAN_AMBIENT_LAND, ENTITY_ELDER_GUARDIAN_CURSE, ENTITY_ELDER_GUARDIAN_DEATH, ENTITY_ELDER_GUARDIAN_DEATH_LAND, ENTITY_ELDER_GUARDIAN_FLOP, ENTITY_ELDER_GUARDIAN_HURT, ENTITY_ELDER_GUARDIAN_HURT_LAND ->
                    Material.ELDER_GUARDIAN_SPAWN_EGG;
            case ENTITY_ENDERMAN_AMBIENT, ENTITY_ENDERMAN_DEATH, ENTITY_ENDERMAN_HURT, ENTITY_ENDERMAN_SCREAM, ENTITY_ENDERMAN_STARE, ENTITY_ENDERMAN_TELEPORT ->
                    Material.ENDERMAN_SPAWN_EGG;
            case ENTITY_ENDERMITE_AMBIENT, ENTITY_ENDERMITE_DEATH, ENTITY_ENDERMITE_HURT, ENTITY_ENDERMITE_STEP ->
                    Material.ENDERMITE_SPAWN_EGG;
            case ENTITY_ENDER_DRAGON_AMBIENT, ENTITY_ENDER_DRAGON_DEATH, ENTITY_ENDER_DRAGON_FLAP, ENTITY_ENDER_DRAGON_GROWL, ENTITY_ENDER_DRAGON_HURT, ENTITY_ENDER_DRAGON_SHOOT ->
                    Material.ENDER_DRAGON_SPAWN_EGG;
            case ENTITY_ENDER_EYE_DEATH, ENTITY_ENDER_EYE_LAUNCH -> Material.ENDER_EYE;
            case ENTITY_ENDER_PEARL_THROW -> Material.ENDER_PEARL;
            case ENTITY_EVOKER_AMBIENT, ENTITY_EVOKER_CAST_SPELL, ENTITY_EVOKER_CELEBRATE, ENTITY_EVOKER_DEATH, ENTITY_EVOKER_FANGS_ATTACK, ENTITY_EVOKER_HURT, ENTITY_EVOKER_PREPARE_ATTACK, ENTITY_EVOKER_PREPARE_SUMMON, ENTITY_EVOKER_PREPARE_WOLOLO ->
                    Material.EVOKER_SPAWN_EGG;
            case ENTITY_EXPERIENCE_BOTTLE_THROW, ENTITY_EXPERIENCE_ORB_PICKUP -> Material.EXPERIENCE_BOTTLE;
            case ENTITY_FIREWORK_ROCKET_BLAST, ENTITY_FIREWORK_ROCKET_BLAST_FAR, ENTITY_FIREWORK_ROCKET_LARGE_BLAST, ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR, ENTITY_FIREWORK_ROCKET_LAUNCH, ENTITY_FIREWORK_ROCKET_SHOOT, ENTITY_FIREWORK_ROCKET_TWINKLE, ENTITY_FIREWORK_ROCKET_TWINKLE_FAR ->
                    Material.FIREWORK_ROCKET;
            case ENTITY_FISHING_BOBBER_RETRIEVE, ENTITY_FISHING_BOBBER_SPLASH, ENTITY_FISHING_BOBBER_THROW ->
                    Material.FISHING_ROD;
            case ENTITY_FOX_AGGRO, ENTITY_FOX_AMBIENT, ENTITY_FOX_BITE, ENTITY_FOX_DEATH, ENTITY_FOX_EAT, ENTITY_FOX_HURT, ENTITY_FOX_SCREECH, ENTITY_FOX_SLEEP, ENTITY_FOX_SNIFF, ENTITY_FOX_SPIT, ENTITY_FOX_TELEPORT ->
                    Material.FOX_SPAWN_EGG;
            case ENTITY_FROG_AMBIENT, ENTITY_FROG_DEATH, ENTITY_FROG_EAT, ENTITY_FROG_HURT, ENTITY_FROG_LAY_SPAWN, ENTITY_FROG_LONG_JUMP, ENTITY_FROG_STEP, ENTITY_FROG_TONGUE ->
                    Material.FROG_SPAWN_EGG;
            case ENTITY_GENERIC_BIG_FALL, ENTITY_GENERIC_BURN, ENTITY_GENERIC_DEATH, ENTITY_GENERIC_DRINK, ENTITY_GENERIC_EAT, ENTITY_GENERIC_EXPLODE, ENTITY_GENERIC_EXTINGUISH_FIRE, ENTITY_GENERIC_HURT, ENTITY_GENERIC_SMALL_FALL, ENTITY_GENERIC_SPLASH, ENTITY_GENERIC_SWIM ->
                    Material.SPAWNER;
            case ENTITY_GHAST_AMBIENT, ENTITY_GHAST_DEATH, ENTITY_GHAST_HURT, ENTITY_GHAST_SCREAM, ENTITY_GHAST_SHOOT, ENTITY_GHAST_WARN ->
                    Material.GHAST_SPAWN_EGG;
            case ENTITY_GLOW_ITEM_FRAME_ADD_ITEM, ENTITY_GLOW_ITEM_FRAME_BREAK, ENTITY_GLOW_ITEM_FRAME_PLACE, ENTITY_GLOW_ITEM_FRAME_REMOVE_ITEM, ENTITY_GLOW_ITEM_FRAME_ROTATE_ITEM ->
                    Material.GLOW_ITEM_FRAME;
            case ENTITY_GLOW_SQUID_AMBIENT, ENTITY_GLOW_SQUID_DEATH, ENTITY_GLOW_SQUID_HURT, ENTITY_GLOW_SQUID_SQUIRT ->
                    Material.GLOW_SQUID_SPAWN_EGG;
            case ENTITY_GOAT_AMBIENT, ENTITY_GOAT_DEATH, ENTITY_GOAT_EAT, ENTITY_GOAT_HORN_BREAK, ENTITY_GOAT_HURT, ENTITY_GOAT_LONG_JUMP, ENTITY_GOAT_MILK, ENTITY_GOAT_PREPARE_RAM, ENTITY_GOAT_RAM_IMPACT, ENTITY_GOAT_SCREAMING_AMBIENT, ENTITY_GOAT_SCREAMING_DEATH, ENTITY_GOAT_SCREAMING_EAT, ENTITY_GOAT_SCREAMING_HORN_BREAK, ENTITY_GOAT_SCREAMING_HURT, ENTITY_GOAT_SCREAMING_LONG_JUMP, ENTITY_GOAT_SCREAMING_MILK, ENTITY_GOAT_SCREAMING_PREPARE_RAM, ENTITY_GOAT_SCREAMING_RAM_IMPACT, ENTITY_GOAT_STEP ->
                    Material.GOAT_SPAWN_EGG;
            case ENTITY_GUARDIAN_AMBIENT, ENTITY_GUARDIAN_AMBIENT_LAND, ENTITY_GUARDIAN_ATTACK, ENTITY_GUARDIAN_DEATH, ENTITY_GUARDIAN_DEATH_LAND, ENTITY_GUARDIAN_FLOP, ENTITY_GUARDIAN_HURT, ENTITY_GUARDIAN_HURT_LAND ->
                    Material.GUARDIAN_SPAWN_EGG;
            case ENTITY_HOGLIN_AMBIENT, ENTITY_HOGLIN_ANGRY, ENTITY_HOGLIN_ATTACK, ENTITY_HOGLIN_CONVERTED_TO_ZOMBIFIED, ENTITY_HOGLIN_DEATH, ENTITY_HOGLIN_HURT, ENTITY_HOGLIN_RETREAT, ENTITY_HOGLIN_STEP ->
                    Material.HOGLIN_SPAWN_EGG;
            case ENTITY_HORSE_AMBIENT, ENTITY_HORSE_ANGRY, ENTITY_HORSE_ARMOR, ENTITY_HORSE_BREATHE, ENTITY_HORSE_DEATH, ENTITY_HORSE_EAT, ENTITY_HORSE_GALLOP, ENTITY_HORSE_HURT, ENTITY_HORSE_JUMP, ENTITY_HORSE_LAND, ENTITY_HORSE_SADDLE, ENTITY_HORSE_STEP, ENTITY_HORSE_STEP_WOOD ->
                    Material.HORSE_SPAWN_EGG;
            case ENTITY_HUSK_AMBIENT, ENTITY_HUSK_CONVERTED_TO_ZOMBIE, ENTITY_HUSK_DEATH, ENTITY_HUSK_HURT, ENTITY_HUSK_STEP ->
                    Material.HUSK_SPAWN_EGG;
            case ENTITY_ILLUSIONER_AMBIENT, ENTITY_ILLUSIONER_CAST_SPELL, ENTITY_ILLUSIONER_DEATH, ENTITY_ILLUSIONER_HURT, ENTITY_ILLUSIONER_MIRROR_MOVE, ENTITY_ILLUSIONER_PREPARE_BLINDNESS, ENTITY_ILLUSIONER_PREPARE_MIRROR ->
                    Material.RED_WOOL;
            case ENTITY_IRON_GOLEM_ATTACK, ENTITY_IRON_GOLEM_DAMAGE, ENTITY_IRON_GOLEM_DEATH, ENTITY_IRON_GOLEM_HURT, ENTITY_IRON_GOLEM_REPAIR, ENTITY_IRON_GOLEM_STEP ->
                    Material.IRON_GOLEM_SPAWN_EGG;
            case ENTITY_ITEM_BREAK, ENTITY_ITEM_FRAME_ADD_ITEM, ENTITY_ITEM_FRAME_BREAK, ENTITY_ITEM_FRAME_PLACE, ENTITY_ITEM_FRAME_REMOVE_ITEM, ENTITY_ITEM_FRAME_ROTATE_ITEM, ENTITY_ITEM_PICKUP ->
                    Material.ITEM_FRAME;
            case ENTITY_LEASH_KNOT_BREAK, ENTITY_LEASH_KNOT_PLACE -> Material.LEAD;
            case ENTITY_LIGHTNING_BOLT_IMPACT, ENTITY_LIGHTNING_BOLT_THUNDER -> Material.LIGHTNING_ROD;
            case ENTITY_LINGERING_POTION_THROW -> Material.LINGERING_POTION;
            case ENTITY_LLAMA_AMBIENT, ENTITY_LLAMA_ANGRY, ENTITY_LLAMA_CHEST, ENTITY_LLAMA_DEATH, ENTITY_LLAMA_EAT, ENTITY_LLAMA_HURT, ENTITY_LLAMA_SPIT, ENTITY_LLAMA_STEP, ENTITY_LLAMA_SWAG ->
                    Material.LLAMA_SPAWN_EGG;
            case ENTITY_MAGMA_CUBE_DEATH, ENTITY_MAGMA_CUBE_DEATH_SMALL, ENTITY_MAGMA_CUBE_HURT, ENTITY_MAGMA_CUBE_HURT_SMALL, ENTITY_MAGMA_CUBE_JUMP, ENTITY_MAGMA_CUBE_SQUISH, ENTITY_MAGMA_CUBE_SQUISH_SMALL ->
                    Material.MAGMA_CUBE_SPAWN_EGG;
            case ENTITY_MINECART_INSIDE, ENTITY_MINECART_INSIDE_UNDERWATER, ENTITY_MINECART_RIDING -> Material.MINECART;
            case ENTITY_MOOSHROOM_CONVERT, ENTITY_MOOSHROOM_EAT, ENTITY_MOOSHROOM_MILK, ENTITY_MOOSHROOM_SHEAR, ENTITY_MOOSHROOM_SUSPICIOUS_MILK ->
                    Material.MOOSHROOM_SPAWN_EGG;
            case ENTITY_MULE_AMBIENT, ENTITY_MULE_ANGRY, ENTITY_MULE_CHEST, ENTITY_MULE_DEATH, ENTITY_MULE_EAT, ENTITY_MULE_HURT ->
                    Material.MULE_SPAWN_EGG;
            case ENTITY_OCELOT_AMBIENT, ENTITY_OCELOT_DEATH, ENTITY_OCELOT_HURT -> Material.OCELOT_SPAWN_EGG;
            case ENTITY_PAINTING_BREAK, ENTITY_PAINTING_PLACE -> Material.PAINTING;
            case ENTITY_PANDA_AGGRESSIVE_AMBIENT, ENTITY_PANDA_AMBIENT, ENTITY_PANDA_BITE, ENTITY_PANDA_CANT_BREED, ENTITY_PANDA_DEATH, ENTITY_PANDA_EAT, ENTITY_PANDA_HURT, ENTITY_PANDA_PRE_SNEEZE, ENTITY_PANDA_SNEEZE, ENTITY_PANDA_STEP, ENTITY_PANDA_WORRIED_AMBIENT ->
                    Material.PANDA_SPAWN_EGG;
            case ENTITY_PARROT_AMBIENT, ENTITY_PARROT_DEATH, ENTITY_PARROT_EAT, ENTITY_PARROT_FLY, ENTITY_PARROT_HURT, ENTITY_PARROT_IMITATE_BLAZE, ENTITY_PARROT_IMITATE_CREEPER, ENTITY_PARROT_IMITATE_DROWNED, ENTITY_PARROT_IMITATE_ELDER_GUARDIAN, ENTITY_PARROT_IMITATE_ENDERMITE, ENTITY_PARROT_IMITATE_ENDER_DRAGON, ENTITY_PARROT_IMITATE_EVOKER, ENTITY_PARROT_IMITATE_GHAST, ENTITY_PARROT_IMITATE_GUARDIAN, ENTITY_PARROT_IMITATE_HOGLIN, ENTITY_PARROT_IMITATE_HUSK, ENTITY_PARROT_IMITATE_ILLUSIONER, ENTITY_PARROT_IMITATE_MAGMA_CUBE, ENTITY_PARROT_IMITATE_PHANTOM, ENTITY_PARROT_IMITATE_PIGLIN, ENTITY_PARROT_IMITATE_PIGLIN_BRUTE, ENTITY_PARROT_IMITATE_PILLAGER, ENTITY_PARROT_IMITATE_RAVAGER, ENTITY_PARROT_IMITATE_SHULKER, ENTITY_PARROT_IMITATE_SILVERFISH, ENTITY_PARROT_IMITATE_SKELETON, ENTITY_PARROT_IMITATE_SLIME, ENTITY_PARROT_IMITATE_SPIDER, ENTITY_PARROT_IMITATE_STRAY, ENTITY_PARROT_IMITATE_VEX, ENTITY_PARROT_IMITATE_VINDICATOR, ENTITY_PARROT_IMITATE_WARDEN, ENTITY_PARROT_IMITATE_WITCH, ENTITY_PARROT_IMITATE_WITHER, ENTITY_PARROT_IMITATE_WITHER_SKELETON, ENTITY_PARROT_IMITATE_ZOGLIN, ENTITY_PARROT_IMITATE_ZOMBIE, ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER, ENTITY_PARROT_STEP ->
                    Material.PARROT_SPAWN_EGG;
            case ENTITY_PHANTOM_AMBIENT, ENTITY_PHANTOM_BITE, ENTITY_PHANTOM_DEATH, ENTITY_PHANTOM_FLAP, ENTITY_PHANTOM_HURT, ENTITY_PHANTOM_SWOOP ->
                    Material.PHANTOM_SPAWN_EGG;
            case ENTITY_PIGLIN_ADMIRING_ITEM, ENTITY_PIGLIN_AMBIENT, ENTITY_PIGLIN_ANGRY, ENTITY_PIGLIN_BRUTE_AMBIENT, ENTITY_PIGLIN_BRUTE_ANGRY, ENTITY_PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED, ENTITY_PIGLIN_BRUTE_DEATH, ENTITY_PIGLIN_BRUTE_HURT, ENTITY_PIGLIN_BRUTE_STEP, ENTITY_PIGLIN_CELEBRATE, ENTITY_PIGLIN_CONVERTED_TO_ZOMBIFIED, ENTITY_PIGLIN_DEATH, ENTITY_PIGLIN_HURT, ENTITY_PIGLIN_JEALOUS, ENTITY_PIGLIN_RETREAT, ENTITY_PIGLIN_STEP ->
                    Material.PIGLIN_SPAWN_EGG;
            case ENTITY_PIG_AMBIENT, ENTITY_PIG_DEATH, ENTITY_PIG_HURT, ENTITY_PIG_SADDLE, ENTITY_PIG_STEP ->
                    Material.PIG_SPAWN_EGG;
            case ENTITY_PILLAGER_AMBIENT, ENTITY_PILLAGER_CELEBRATE, ENTITY_PILLAGER_DEATH, ENTITY_PILLAGER_HURT, EVENT_RAID_HORN ->
                    Material.PILLAGER_SPAWN_EGG;
            case ENTITY_PLAYER_ATTACK_CRIT, ENTITY_PLAYER_ATTACK_KNOCKBACK, ENTITY_PLAYER_ATTACK_NODAMAGE, ENTITY_PLAYER_ATTACK_STRONG, ENTITY_PLAYER_ATTACK_SWEEP, ENTITY_PLAYER_ATTACK_WEAK, ENTITY_PLAYER_BIG_FALL, ENTITY_PLAYER_BREATH, ENTITY_PLAYER_BURP, ENTITY_PLAYER_DEATH, ENTITY_PLAYER_HURT, ENTITY_PLAYER_HURT_DROWN, ENTITY_PLAYER_HURT_FREEZE, ENTITY_PLAYER_HURT_ON_FIRE, ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH, ENTITY_PLAYER_LEVELUP, ENTITY_PLAYER_SMALL_FALL, ENTITY_PLAYER_SPLASH, ENTITY_PLAYER_SPLASH_HIGH_SPEED, ENTITY_PLAYER_SWIM ->
                    Material.PLAYER_HEAD;
            case ENTITY_POLAR_BEAR_AMBIENT, ENTITY_POLAR_BEAR_AMBIENT_BABY, ENTITY_POLAR_BEAR_DEATH, ENTITY_POLAR_BEAR_HURT, ENTITY_POLAR_BEAR_STEP, ENTITY_POLAR_BEAR_WARNING ->
                    Material.POLAR_BEAR_SPAWN_EGG;
            case ENTITY_PUFFER_FISH_AMBIENT, ENTITY_PUFFER_FISH_BLOW_OUT, ENTITY_PUFFER_FISH_BLOW_UP, ENTITY_PUFFER_FISH_DEATH, ENTITY_PUFFER_FISH_FLOP, ENTITY_PUFFER_FISH_HURT, ENTITY_PUFFER_FISH_STING ->
                    Material.PUFFERFISH;
            case ENTITY_RABBIT_AMBIENT, ENTITY_RABBIT_ATTACK, ENTITY_RABBIT_DEATH, ENTITY_RABBIT_HURT, ENTITY_RABBIT_JUMP ->
                    Material.RABBIT;
            case ENTITY_RAVAGER_AMBIENT, ENTITY_RAVAGER_ATTACK, ENTITY_RAVAGER_CELEBRATE, ENTITY_RAVAGER_DEATH, ENTITY_RAVAGER_HURT, ENTITY_RAVAGER_ROAR, ENTITY_RAVAGER_STEP, ENTITY_RAVAGER_STUNNED ->
                    Material.RAVAGER_SPAWN_EGG;
            case ENTITY_SALMON_AMBIENT, ENTITY_SALMON_DEATH, ENTITY_SALMON_FLOP, ENTITY_SALMON_HURT -> Material.SALMON;
            case ENTITY_SHEEP_AMBIENT, ENTITY_SHEEP_DEATH, ENTITY_SHEEP_HURT, ENTITY_SHEEP_SHEAR, ENTITY_SHEEP_STEP ->
                    Material.SHEEP_SPAWN_EGG;
            case ENTITY_SHULKER_AMBIENT, ENTITY_SHULKER_BULLET_HIT, ENTITY_SHULKER_BULLET_HURT, ENTITY_SHULKER_CLOSE, ENTITY_SHULKER_DEATH, ENTITY_SHULKER_HURT, ENTITY_SHULKER_HURT_CLOSED, ENTITY_SHULKER_OPEN, ENTITY_SHULKER_SHOOT, ENTITY_SHULKER_TELEPORT ->
                    Material.SHULKER_SPAWN_EGG;
            case ENTITY_SILVERFISH_AMBIENT, ENTITY_SILVERFISH_DEATH, ENTITY_SILVERFISH_HURT, ENTITY_SILVERFISH_STEP ->
                    Material.SILVERFISH_SPAWN_EGG;
            case ENTITY_SKELETON_AMBIENT, ENTITY_SKELETON_CONVERTED_TO_STRAY, ENTITY_SKELETON_DEATH, ENTITY_SKELETON_HORSE_AMBIENT, ENTITY_SKELETON_HORSE_AMBIENT_WATER, ENTITY_SKELETON_HORSE_DEATH, ENTITY_SKELETON_HORSE_GALLOP_WATER, ENTITY_SKELETON_HORSE_HURT, ENTITY_SKELETON_HORSE_JUMP_WATER, ENTITY_SKELETON_HORSE_STEP_WATER, ENTITY_SKELETON_HORSE_SWIM, ENTITY_SKELETON_HURT, ENTITY_SKELETON_SHOOT, ENTITY_SKELETON_STEP ->
                    Material.SKELETON_SPAWN_EGG;
            case ENTITY_SLIME_ATTACK, ENTITY_SLIME_DEATH, ENTITY_SLIME_DEATH_SMALL, ENTITY_SLIME_HURT, ENTITY_SLIME_HURT_SMALL, ENTITY_SLIME_JUMP, ENTITY_SLIME_JUMP_SMALL, ENTITY_SLIME_SQUISH, ENTITY_SLIME_SQUISH_SMALL ->
                    Material.SLIME_SPAWN_EGG;
            case ENTITY_SNIFFER_DEATH, ENTITY_SNIFFER_DIGGING, ENTITY_SNIFFER_DIGGING_STOP, ENTITY_SNIFFER_DROP_SEED, ENTITY_SNIFFER_EAT, ENTITY_SNIFFER_HAPPY, ENTITY_SNIFFER_HURT, ENTITY_SNIFFER_IDLE, ENTITY_SNIFFER_SCENTING, ENTITY_SNIFFER_SEARCHING, ENTITY_SNIFFER_SNIFFING, ENTITY_SNIFFER_STEP ->
                    Material.SNIFFER_SPAWN_EGG;
            case ENTITY_SNOWBALL_THROW -> Material.SNOWBALL;
            case ENTITY_SNOW_GOLEM_AMBIENT, ENTITY_SNOW_GOLEM_DEATH, ENTITY_SNOW_GOLEM_HURT, ENTITY_SNOW_GOLEM_SHEAR, ENTITY_SNOW_GOLEM_SHOOT ->
                    Material.SNOW_GOLEM_SPAWN_EGG;
            case ENTITY_SPIDER_AMBIENT, ENTITY_SPIDER_DEATH, ENTITY_SPIDER_HURT, ENTITY_SPIDER_STEP ->
                    Material.SPIDER_SPAWN_EGG;
            case ENTITY_SPLASH_POTION_BREAK, ENTITY_SPLASH_POTION_THROW -> Material.SPLASH_POTION;
            case ENTITY_SQUID_AMBIENT, ENTITY_SQUID_DEATH, ENTITY_SQUID_HURT, ENTITY_SQUID_SQUIRT ->
                    Material.SQUID_SPAWN_EGG;
            case ENTITY_STRAY_AMBIENT, ENTITY_STRAY_DEATH, ENTITY_STRAY_HURT, ENTITY_STRAY_STEP ->
                    Material.STRAY_SPAWN_EGG;
            case ENTITY_STRIDER_AMBIENT, ENTITY_STRIDER_DEATH, ENTITY_STRIDER_EAT, ENTITY_STRIDER_HAPPY, ENTITY_STRIDER_HURT, ENTITY_STRIDER_RETREAT, ENTITY_STRIDER_SADDLE, ENTITY_STRIDER_STEP, ENTITY_STRIDER_STEP_LAVA ->
                    Material.STRIDER_SPAWN_EGG;
            case ENTITY_TADPOLE_DEATH, ENTITY_TADPOLE_FLOP, ENTITY_TADPOLE_GROW_UP, ENTITY_TADPOLE_HURT ->
                    Material.TADPOLE_SPAWN_EGG;
            case ENTITY_TNT_PRIMED -> Material.TNT;
            case ENTITY_TROPICAL_FISH_AMBIENT, ENTITY_TROPICAL_FISH_DEATH, ENTITY_TROPICAL_FISH_FLOP, ENTITY_TROPICAL_FISH_HURT ->
                    Material.TROPICAL_FISH;
            case ENTITY_TURTLE_AMBIENT_LAND, ENTITY_TURTLE_DEATH, ENTITY_TURTLE_DEATH_BABY, ENTITY_TURTLE_EGG_BREAK, ENTITY_TURTLE_EGG_CRACK, ENTITY_TURTLE_EGG_HATCH, ENTITY_TURTLE_HURT, ENTITY_TURTLE_HURT_BABY, ENTITY_TURTLE_LAY_EGG, ENTITY_TURTLE_SHAMBLE, ENTITY_TURTLE_SHAMBLE_BABY, ENTITY_TURTLE_SWIM ->
                    Material.TURTLE_SPAWN_EGG;
            case ENTITY_VEX_AMBIENT, ENTITY_VEX_CHARGE, ENTITY_VEX_DEATH, ENTITY_VEX_HURT -> Material.VEX_SPAWN_EGG;
            case ENTITY_VILLAGER_AMBIENT, ENTITY_VILLAGER_CELEBRATE, ENTITY_VILLAGER_DEATH, ENTITY_VILLAGER_HURT, ENTITY_VILLAGER_NO, ENTITY_VILLAGER_TRADE, ENTITY_VILLAGER_WORK_ARMORER, ENTITY_VILLAGER_WORK_BUTCHER, ENTITY_VILLAGER_WORK_CARTOGRAPHER, ENTITY_VILLAGER_WORK_CLERIC, ENTITY_VILLAGER_WORK_FARMER, ENTITY_VILLAGER_WORK_FISHERMAN, ENTITY_VILLAGER_WORK_FLETCHER, ENTITY_VILLAGER_WORK_LEATHERWORKER, ENTITY_VILLAGER_WORK_LIBRARIAN, ENTITY_VILLAGER_WORK_MASON, ENTITY_VILLAGER_WORK_SHEPHERD, ENTITY_VILLAGER_WORK_TOOLSMITH, ENTITY_VILLAGER_WORK_WEAPONSMITH, ENTITY_VILLAGER_YES ->
                    Material.VILLAGER_SPAWN_EGG;
            case ENTITY_VINDICATOR_AMBIENT, ENTITY_VINDICATOR_CELEBRATE, ENTITY_VINDICATOR_DEATH, ENTITY_VINDICATOR_HURT ->
                    Material.VINDICATOR_SPAWN_EGG;
            case ENTITY_WANDERING_TRADER_AMBIENT, ENTITY_WANDERING_TRADER_DEATH, ENTITY_WANDERING_TRADER_DISAPPEARED, ENTITY_WANDERING_TRADER_DRINK_MILK, ENTITY_WANDERING_TRADER_DRINK_POTION, ENTITY_WANDERING_TRADER_HURT, ENTITY_WANDERING_TRADER_NO, ENTITY_WANDERING_TRADER_REAPPEARED, ENTITY_WANDERING_TRADER_TRADE, ENTITY_WANDERING_TRADER_YES ->
                    Material.WANDERING_TRADER_SPAWN_EGG;
            case ENTITY_WARDEN_AGITATED, ENTITY_WARDEN_AMBIENT, ENTITY_WARDEN_ANGRY, ENTITY_WARDEN_ATTACK_IMPACT, ENTITY_WARDEN_DEATH, ENTITY_WARDEN_DIG, ENTITY_WARDEN_EMERGE, ENTITY_WARDEN_HEARTBEAT, ENTITY_WARDEN_HURT, ENTITY_WARDEN_LISTENING, ENTITY_WARDEN_LISTENING_ANGRY, ENTITY_WARDEN_NEARBY_CLOSE, ENTITY_WARDEN_NEARBY_CLOSER, ENTITY_WARDEN_NEARBY_CLOSEST, ENTITY_WARDEN_ROAR, ENTITY_WARDEN_SNIFF, ENTITY_WARDEN_SONIC_BOOM, ENTITY_WARDEN_SONIC_CHARGE, ENTITY_WARDEN_STEP, ENTITY_WARDEN_TENDRIL_CLICKS ->
                    Material.WARDEN_SPAWN_EGG;
            case ENTITY_WITCH_AMBIENT, ENTITY_WITCH_CELEBRATE, ENTITY_WITCH_DEATH, ENTITY_WITCH_DRINK, ENTITY_WITCH_HURT, ENTITY_WITCH_THROW ->
                    Material.WITCH_SPAWN_EGG;
            case ENTITY_WITHER_AMBIENT, ENTITY_WITHER_BREAK_BLOCK, ENTITY_WITHER_DEATH, ENTITY_WITHER_HURT, ENTITY_WITHER_SHOOT, ENTITY_WITHER_SKELETON_AMBIENT, ENTITY_WITHER_SKELETON_DEATH, ENTITY_WITHER_SKELETON_HURT, ENTITY_WITHER_SKELETON_STEP, ENTITY_WITHER_SPAWN ->
                    Material.WITHER_SPAWN_EGG;
            case ENTITY_WOLF_AMBIENT, ENTITY_WOLF_DEATH, ENTITY_WOLF_GROWL, ENTITY_WOLF_HOWL, ENTITY_WOLF_HURT, ENTITY_WOLF_PANT, ENTITY_WOLF_SHAKE, ENTITY_WOLF_STEP, ENTITY_WOLF_WHINE ->
                    Material.WOLF_SPAWN_EGG;
            case ENTITY_ZOGLIN_AMBIENT, ENTITY_ZOGLIN_ANGRY, ENTITY_ZOGLIN_ATTACK, ENTITY_ZOGLIN_DEATH, ENTITY_ZOGLIN_HURT, ENTITY_ZOGLIN_STEP ->
                    Material.ZOGLIN_SPAWN_EGG;
            case ENTITY_ZOMBIE_AMBIENT, ENTITY_ZOMBIE_ATTACK_IRON_DOOR, ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR, ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, ENTITY_ZOMBIE_CONVERTED_TO_DROWNED, ENTITY_ZOMBIE_DEATH, ENTITY_ZOMBIE_DESTROY_EGG, ENTITY_ZOMBIE_HORSE_AMBIENT, ENTITY_ZOMBIE_HORSE_DEATH, ENTITY_ZOMBIE_HORSE_HURT, ENTITY_ZOMBIE_HURT, ENTITY_ZOMBIE_INFECT, ENTITY_ZOMBIE_STEP, ENTITY_ZOMBIE_VILLAGER_AMBIENT, ENTITY_ZOMBIE_VILLAGER_CONVERTED, ENTITY_ZOMBIE_VILLAGER_CURE, ENTITY_ZOMBIE_VILLAGER_DEATH, ENTITY_ZOMBIE_VILLAGER_HURT, ENTITY_ZOMBIE_VILLAGER_STEP ->
                    Material.ZOMBIE_SPAWN_EGG;
            case ENTITY_ZOMBIFIED_PIGLIN_AMBIENT, ENTITY_ZOMBIFIED_PIGLIN_ANGRY, ENTITY_ZOMBIFIED_PIGLIN_DEATH, ENTITY_ZOMBIFIED_PIGLIN_HURT ->
                    Material.ZOMBIFIED_PIGLIN_SPAWN_EGG;
            case ITEM_ARMOR_EQUIP_CHAIN, ITEM_ARMOR_EQUIP_DIAMOND, ITEM_ARMOR_EQUIP_ELYTRA, ITEM_ARMOR_EQUIP_GENERIC, ITEM_ARMOR_EQUIP_GOLD, ITEM_ARMOR_EQUIP_IRON, ITEM_ARMOR_EQUIP_LEATHER, ITEM_ARMOR_EQUIP_NETHERITE, ITEM_ARMOR_EQUIP_TURTLE ->
                    Material.DIAMOND_CHESTPLATE;
            case ITEM_AXE_SCRAPE, ITEM_AXE_WAX_OFF, ITEM_AXE_STRIP -> Material.WOODEN_AXE;
            case ITEM_BONE_MEAL_USE -> Material.BONE_MEAL;
            case ITEM_BOOK_PAGE_TURN, ITEM_BOOK_PUT -> Material.BOOK;
            case ITEM_BOTTLE_EMPTY, ITEM_BOTTLE_FILL, ITEM_BOTTLE_FILL_DRAGONBREATH -> Material.GLASS_BOTTLE;
            case ITEM_BRUSH_BRUSHING_GENERIC, ITEM_BRUSH_BRUSHING_GRAVEL, ITEM_BRUSH_BRUSHING_GRAVEL_COMPLETE, ITEM_BRUSH_BRUSHING_SAND, ITEM_BRUSH_BRUSHING_SAND_COMPLETE ->
                    Material.BRUSH;
            case ITEM_BUCKET_EMPTY, ITEM_BUCKET_EMPTY_AXOLOTL, ITEM_BUCKET_EMPTY_FISH, ITEM_BUCKET_EMPTY_LAVA, ITEM_BUCKET_EMPTY_POWDER_SNOW, ITEM_BUCKET_EMPTY_TADPOLE, ITEM_BUCKET_FILL, ITEM_BUCKET_FILL_AXOLOTL, ITEM_BUCKET_FILL_FISH, ITEM_BUCKET_FILL_LAVA, ITEM_BUCKET_FILL_POWDER_SNOW, ITEM_BUCKET_FILL_TADPOLE ->
                    Material.BUCKET;
            case ITEM_BUNDLE_DROP_CONTENTS, ITEM_BUNDLE_INSERT, ITEM_BUNDLE_REMOVE_ONE -> Material.BUNDLE;
            case ITEM_CHORUS_FRUIT_TELEPORT -> Material.CHORUS_FRUIT;
            case ITEM_CROSSBOW_HIT, ITEM_CROSSBOW_LOADING_END, ITEM_CROSSBOW_LOADING_MIDDLE, ITEM_CROSSBOW_LOADING_START, ITEM_CROSSBOW_QUICK_CHARGE_1, ITEM_CROSSBOW_QUICK_CHARGE_2, ITEM_CROSSBOW_QUICK_CHARGE_3, ITEM_CROSSBOW_SHOOT ->
                    Material.CROSSBOW;
            case ITEM_DYE_USE -> Material.WHITE_DYE;
            case ITEM_ELYTRA_FLYING -> Material.ELYTRA;
            case ITEM_FIRECHARGE_USE -> Material.FIRE_CHARGE;
            case ITEM_GLOW_INK_SAC_USE -> Material.GLOW_INK_SAC;
            case ITEM_GOAT_HORN_PLAY, ITEM_GOAT_HORN_SOUND_0, ITEM_GOAT_HORN_SOUND_1, ITEM_GOAT_HORN_SOUND_2, ITEM_GOAT_HORN_SOUND_3, ITEM_GOAT_HORN_SOUND_4, ITEM_GOAT_HORN_SOUND_5, ITEM_GOAT_HORN_SOUND_6, ITEM_GOAT_HORN_SOUND_7 ->
                    Material.GOAT_HORN;
            case ITEM_HOE_TILL -> Material.WOODEN_HOE;
            case ITEM_HONEYCOMB_WAX_ON -> Material.HONEYCOMB;
            case ITEM_HONEY_BOTTLE_DRINK -> Material.HONEY_BOTTLE;
            case ITEM_INK_SAC_USE -> Material.INK_SAC;
            case ITEM_SHIELD_BLOCK, ITEM_SHIELD_BREAK -> Material.SHIELD;
            case ITEM_SHOVEL_FLATTEN -> Material.WOODEN_SHOVEL;
            case ITEM_SPYGLASS_STOP_USING, ITEM_SPYGLASS_USE -> Material.SPYGLASS;
            case ITEM_TOTEM_USE -> Material.TOTEM_OF_UNDYING;
            case MUSIC_CREATIVE, MUSIC_CREDITS, MUSIC_DISC_11, MUSIC_DISC_13, MUSIC_DISC_5, MUSIC_DISC_BLOCKS, MUSIC_DISC_CAT, MUSIC_DISC_CHIRP, MUSIC_DISC_FAR, MUSIC_DISC_MALL, MUSIC_DISC_MELLOHI, MUSIC_DISC_OTHERSIDE, MUSIC_DISC_PIGSTEP, MUSIC_DISC_RELIC, MUSIC_DISC_STAL, MUSIC_DISC_STRAD, MUSIC_DISC_WAIT, MUSIC_DISC_WARD, MUSIC_DRAGON, MUSIC_END, MUSIC_GAME, MUSIC_MENU, MUSIC_NETHER_BASALT_DELTAS, MUSIC_NETHER_CRIMSON_FOREST, MUSIC_NETHER_NETHER_WASTES, MUSIC_NETHER_SOUL_SAND_VALLEY, MUSIC_NETHER_WARPED_FOREST, MUSIC_OVERWORLD_BADLANDS, MUSIC_OVERWORLD_BAMBOO_JUNGLE, MUSIC_OVERWORLD_CHERRY_GROVE, MUSIC_OVERWORLD_DEEP_DARK, MUSIC_OVERWORLD_DESERT, MUSIC_OVERWORLD_DRIPSTONE_CAVES, MUSIC_OVERWORLD_FLOWER_FOREST, MUSIC_OVERWORLD_FOREST, MUSIC_OVERWORLD_FROZEN_PEAKS, MUSIC_OVERWORLD_GROVE, MUSIC_OVERWORLD_JAGGED_PEAKS, MUSIC_OVERWORLD_JUNGLE, MUSIC_OVERWORLD_LUSH_CAVES, MUSIC_OVERWORLD_MEADOW, MUSIC_OVERWORLD_OLD_GROWTH_TAIGA, MUSIC_OVERWORLD_SNOWY_SLOPES, MUSIC_OVERWORLD_SPARSE_JUNGLE, MUSIC_OVERWORLD_STONY_PEAKS, MUSIC_OVERWORLD_SWAMP, MUSIC_UNDER_WATER ->
                    Material.MUSIC_DISC_5;
            case UI_CARTOGRAPHY_TABLE_TAKE_RESULT, UI_STONECUTTER_SELECT_RECIPE, UI_STONECUTTER_TAKE_RESULT ->
                    Material.CARTOGRAPHY_TABLE;
            case UI_LOOM_SELECT_PATTERN, UI_LOOM_TAKE_RESULT -> Material.LOOM;
            case UI_TOAST_CHALLENGE_COMPLETE, UI_TOAST_IN, UI_TOAST_OUT -> Material.BREAD;
            case BLOCK_NOTE_BLOCK_BANJO, BLOCK_NOTE_BLOCK_BASEDRUM, BLOCK_NOTE_BLOCK_BASS, BLOCK_NOTE_BLOCK_BELL, BLOCK_NOTE_BLOCK_BIT, BLOCK_NOTE_BLOCK_CHIME, BLOCK_NOTE_BLOCK_COW_BELL, BLOCK_NOTE_BLOCK_DIDGERIDOO, BLOCK_NOTE_BLOCK_FLUTE, BLOCK_NOTE_BLOCK_GUITAR, BLOCK_NOTE_BLOCK_HARP, BLOCK_NOTE_BLOCK_HAT, BLOCK_NOTE_BLOCK_IMITATE_CREEPER, BLOCK_NOTE_BLOCK_IMITATE_ENDER_DRAGON, BLOCK_NOTE_BLOCK_IMITATE_PIGLIN, BLOCK_NOTE_BLOCK_IMITATE_SKELETON, BLOCK_NOTE_BLOCK_IMITATE_WITHER_SKELETON, BLOCK_NOTE_BLOCK_IMITATE_ZOMBIE, BLOCK_NOTE_BLOCK_IRON_XYLOPHONE, BLOCK_NOTE_BLOCK_PLING, BLOCK_NOTE_BLOCK_SNARE, BLOCK_NOTE_BLOCK_XYLOPHONE ->
                    Material.NOTE_BLOCK;
            case BLOCK_TUFF_STEP, BLOCK_TUFF_BREAK, BLOCK_TUFF_FALL, BLOCK_TUFF_HIT, BLOCK_TUFF_PLACE -> Material.TUFF;
            case BLOCK_TRIPWIRE_DETACH, BLOCK_TRIPWIRE_ATTACH, BLOCK_TRIPWIRE_CLICK_OFF, BLOCK_TRIPWIRE_CLICK_ON ->
                    Material.TRIPWIRE_HOOK;
            case BLOCK_SWEET_BERRY_BUSH_PLACE, BLOCK_SWEET_BERRY_BUSH_BREAK, BLOCK_SWEET_BERRY_BUSH_PICK_BERRIES ->
                    Material.SWEET_BERRIES;
            case BLOCK_SUSPICIOUS_SAND_STEP, BLOCK_SUSPICIOUS_SAND_BREAK, BLOCK_SUSPICIOUS_SAND_FALL, BLOCK_SUSPICIOUS_SAND_HIT, BLOCK_SUSPICIOUS_SAND_PLACE ->
                    Material.SUSPICIOUS_SAND;
            case BLOCK_SUSPICIOUS_GRAVEL_STEP, BLOCK_SUSPICIOUS_GRAVEL_BREAK, BLOCK_SUSPICIOUS_GRAVEL_FALL, BLOCK_SUSPICIOUS_GRAVEL_HIT, BLOCK_SUSPICIOUS_GRAVEL_PLACE ->
                    Material.SUSPICIOUS_GRAVEL;
            case BLOCK_STONE_PRESSURE_PLATE_CLICK_ON, BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF ->
                    Material.STONE_PRESSURE_PLATE;
            case BLOCK_STONE_BUTTON_CLICK_ON, BLOCK_STONE_BUTTON_CLICK_OFF -> Material.STONE_BUTTON;
            case BLOCK_STEM_STEP, BLOCK_STEM_BREAK, BLOCK_STEM_FALL, BLOCK_STEM_HIT, BLOCK_STEM_PLACE ->
                    Material.MUSHROOM_STEM;
            case BLOCK_SPORE_BLOSSOM_STEP, BLOCK_SPORE_BLOSSOM_BREAK, BLOCK_SPORE_BLOSSOM_FALL, BLOCK_SPORE_BLOSSOM_HIT, BLOCK_SPORE_BLOSSOM_PLACE ->
                    Material.SPORE_BLOSSOM;
            case BLOCK_SOUL_SOIL_STEP, BLOCK_SOUL_SOIL_BREAK, BLOCK_SOUL_SOIL_FALL, BLOCK_SOUL_SOIL_HIT, BLOCK_SOUL_SOIL_PLACE ->
                    Material.SOUL_SOIL;
            case BLOCK_SNOW_STEP, BLOCK_SNOW_FALL, BLOCK_SNOW_HIT, BLOCK_SNOW_PLACE -> Material.SNOW;
            case BLOCK_SNOW_BREAK -> Material.SNOW_BLOCK;
            case BLOCK_SNIFFER_EGG_PLOP, BLOCK_SNIFFER_EGG_CRACK, BLOCK_SNIFFER_EGG_HATCH -> Material.SNIFFER_EGG;
            case BLOCK_SMOKER_SMOKE -> Material.SMOKER;
            case BLOCK_SMITHING_TABLE_USE -> Material.SMITHING_TABLE;
            case BLOCK_SMALL_DRIPLEAF_STEP, BLOCK_SMALL_DRIPLEAF_BREAK, BLOCK_SMALL_DRIPLEAF_FALL, BLOCK_SMALL_DRIPLEAF_HIT, BLOCK_SMALL_DRIPLEAF_PLACE ->
                    Material.SMALL_DRIPLEAF;
            case BLOCK_SMALL_AMETHYST_BUD_PLACE, BLOCK_SMALL_AMETHYST_BUD_BREAK -> Material.SMALL_AMETHYST_BUD;
            case BLOCK_SLIME_BLOCK_STEP, BLOCK_SLIME_BLOCK_BREAK, BLOCK_SLIME_BLOCK_FALL, BLOCK_SLIME_BLOCK_HIT, BLOCK_SLIME_BLOCK_PLACE ->
                    Material.SLIME_BLOCK;
            case BLOCK_SIGN_WAXED_INTERACT_FAIL -> Material.OAK_SIGN;
            case BLOCK_SHULKER_BOX_OPEN, BLOCK_SHULKER_BOX_CLOSE -> Material.SHULKER_BOX;
            case BLOCK_SHROOMLIGHT_STEP, BLOCK_SHROOMLIGHT_BREAK, BLOCK_SHROOMLIGHT_FALL, BLOCK_SHROOMLIGHT_HIT, BLOCK_SHROOMLIGHT_PLACE ->
                    Material.SHROOMLIGHT;
            case BLOCK_SCULK_VEIN_STEP, BLOCK_SCULK_VEIN_BREAK, BLOCK_SCULK_VEIN_FALL, BLOCK_SCULK_VEIN_HIT, BLOCK_SCULK_VEIN_PLACE ->
                    Material.SCULK_VEIN;
            case BLOCK_SCULK_STEP, BLOCK_SCULK_BREAK, BLOCK_SCULK_CHARGE, BLOCK_SCULK_FALL, BLOCK_SCULK_HIT, BLOCK_SCULK_PLACE, BLOCK_SCULK_SPREAD ->
                    Material.SCULK;
            case BLOCK_SCULK_SHRIEKER_STEP, BLOCK_SCULK_SHRIEKER_BREAK, BLOCK_SCULK_SHRIEKER_FALL, BLOCK_SCULK_SHRIEKER_HIT, BLOCK_SCULK_SHRIEKER_PLACE, BLOCK_SCULK_SHRIEKER_SHRIEK ->
                    Material.SCULK_SHRIEKER;
            case BLOCK_SCULK_SENSOR_STEP, BLOCK_SCULK_SENSOR_BREAK, BLOCK_SCULK_SENSOR_CLICKING, BLOCK_SCULK_SENSOR_CLICKING_STOP, BLOCK_SCULK_SENSOR_FALL, BLOCK_SCULK_SENSOR_HIT, BLOCK_SCULK_SENSOR_PLACE ->
                    Material.SCULK_SENSOR;
            case BLOCK_SCULK_CATALYST_STEP, BLOCK_SCULK_CATALYST_BLOOM, BLOCK_SCULK_CATALYST_BREAK, BLOCK_SCULK_CATALYST_FALL, BLOCK_SCULK_CATALYST_HIT, BLOCK_SCULK_CATALYST_PLACE ->
                    Material.SCULK_CATALYST;
            case BLOCK_SCAFFOLDING_STEP, BLOCK_SCAFFOLDING_BREAK, BLOCK_SCAFFOLDING_FALL, BLOCK_SCAFFOLDING_HIT, BLOCK_SCAFFOLDING_PLACE ->
                    Material.SCAFFOLDING;
            case BLOCK_SAND_STEP, BLOCK_SAND_BREAK, BLOCK_SAND_FALL, BLOCK_SAND_HIT, BLOCK_SAND_PLACE -> Material.SAND;
            case BLOCK_ROOTS_STEP, BLOCK_ROOTS_BREAK, BLOCK_ROOTS_FALL, BLOCK_ROOTS_HIT, BLOCK_ROOTS_PLACE ->
                    Material.BEETROOT;
            case BLOCK_ROOTED_DIRT_STEP, BLOCK_ROOTED_DIRT_BREAK, BLOCK_ROOTED_DIRT_FALL, BLOCK_ROOTED_DIRT_HIT, BLOCK_ROOTED_DIRT_PLACE ->
                    Material.ROOTED_DIRT;
            case BLOCK_RESPAWN_ANCHOR_SET_SPAWN, BLOCK_RESPAWN_ANCHOR_AMBIENT, BLOCK_RESPAWN_ANCHOR_CHARGE, BLOCK_RESPAWN_ANCHOR_DEPLETE ->
                    Material.RESPAWN_ANCHOR;
            case BLOCK_REDSTONE_TORCH_BURNOUT -> Material.REDSTONE_TORCH;
            case BLOCK_PUMPKIN_CARVE -> Material.PUMPKIN;
            case BLOCK_POWDER_SNOW_STEP, BLOCK_POWDER_SNOW_BREAK, BLOCK_POWDER_SNOW_FALL, BLOCK_POWDER_SNOW_HIT, BLOCK_POWDER_SNOW_PLACE ->
                    Material.POWDER_SNOW_BUCKET;
            case BLOCK_POLISHED_DEEPSLATE_STEP, BLOCK_POLISHED_DEEPSLATE_BREAK, BLOCK_POLISHED_DEEPSLATE_FALL, BLOCK_POLISHED_DEEPSLATE_HIT, BLOCK_POLISHED_DEEPSLATE_PLACE ->
                    Material.POLISHED_DEEPSLATE;
            case BLOCK_POINTED_DRIPSTONE_STEP, BLOCK_POINTED_DRIPSTONE_BREAK, BLOCK_POINTED_DRIPSTONE_DRIP_LAVA, BLOCK_POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON, BLOCK_POINTED_DRIPSTONE_DRIP_WATER, BLOCK_POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON, BLOCK_POINTED_DRIPSTONE_FALL, BLOCK_POINTED_DRIPSTONE_HIT, BLOCK_POINTED_DRIPSTONE_LAND, BLOCK_POINTED_DRIPSTONE_PLACE ->
                    Material.POINTED_DRIPSTONE;
            case BLOCK_PISTON_EXTEND, BLOCK_PISTON_CONTRACT -> Material.PISTON;
            case BLOCK_PINK_PETALS_STEP, BLOCK_PINK_PETALS_BREAK, BLOCK_PINK_PETALS_FALL, BLOCK_PINK_PETALS_HIT, BLOCK_PINK_PETALS_PLACE ->
                    Material.PINK_PETALS;
            case BLOCK_PACKED_MUD_STEP, BLOCK_PACKED_MUD_BREAK, BLOCK_PACKED_MUD_FALL, BLOCK_PACKED_MUD_HIT, BLOCK_PACKED_MUD_PLACE ->
                    Material.PACKED_MUD;
            case BLOCK_NYLIUM_STEP, BLOCK_NYLIUM_BREAK, BLOCK_NYLIUM_FALL, BLOCK_NYLIUM_HIT, BLOCK_NYLIUM_PLACE ->
                    Material.MYCELIUM;
            case INTENTIONALLY_EMPTY -> Material.BARRIER;
            default -> Material.NOTE_BLOCK;
        };
    }
}
